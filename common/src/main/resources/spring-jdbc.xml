<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        ">


    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${app.jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${app.jdbc.url}"/>
        <property name="username" value="${app.jdbc.username}"/>
        <property name="password" value="${app.jdbc.password}"/>
        <property name="idleConnectionTestPeriodInSeconds" value="60"/>
        <property name="idleMaxAgeInSeconds" value="240"/>
        <property name="maxConnectionsPerPartition" value="30"/>
        <property name="minConnectionsPerPartition" value="1"/>
        <property name="partitionCount" value="3"/>
        <property name="acquireIncrement" value="5"/>
        <property name="statementsCacheSize" value="100"/>
    </bean>
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"></property>-->
        <!--<property name="mapperLocations" value="classpath*:mappers/*.xml"></property>-->
    <!--</bean>-->

   <!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>-->

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; mapping搜索的路径 &ndash;&gt;-->
        <!--<property name="basePackage" value="com.hoki.spring.**.dao" />-->
    <!--</bean>-->

    <tx:annotation-driven transaction-manager="txManager"/>
    <!-- a PlatformTransactionManager is still required -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- (this dependency is defined somewhere else) -->
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" abstract="false"
          lazy-init="false" autowire="default" >
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>


    <bean class="com.dreamwork.spring.util.SpringContextHolder" lazy-init="false" />

    <!--加密使用-->
    <bean id="propertyConfig" class="com.dreamwork.spring.security.PropertyDecipher">
        <property name="locations">
            <list>
                <value>classpath:DBConfig.properties</value>
            </list>
        </property>
    </bean>

    <!--ms后台配置库数据源-->
    <bean id="db_service" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${service.DataSource.jdbc.driverClassName}"></property>
        <property name="url" value="${service.DataSource.jdbc.url}"></property>
        <property name="username" value="${service.DataSource.jdbc.username}"></property>
        <property name="password" value="${service.DataSource.jdbc.password}"></property>
        <!--连接池初始化值 -->
        <property name="initialSize" value="1"></property>
        <!--连接池最大值 -->
        <property name="maxActive" value="500"></property>
        <!--最大空闲值，当经过一高峰期，慢慢释放连接，直到达到maxIdle -->
        <property name="maxIdle" value="2"></property>
        <!--最小空闲值，当空闲连接少于阀值时，连接池会预申请一些连接 -->
        <property name="minIdle" value="2"></property>
    </bean>

    <!--动态数据源 -->
    <bean id="dynamicDataSource" class="com.dreamwork.spring.db.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry key="db_service" value-ref="db_service" />
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="db_service" />
    </bean>

    <jpa:repositories base-package="com.dreamwork.spring" >

    </jpa:repositories>

</beans>